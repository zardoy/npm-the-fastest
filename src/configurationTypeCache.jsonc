// GENERATED. DON'T EDIT MANUALLY
// md5hash: dbc2191c785a8876698117d251553607
{
    "type": "object",
    "properties": {
        "leadingPackageManager": {
            "description": "Your main package manager that leads your projects\nUsed when no lockfile is detected\nBy default (when null) first installed is picked: pnpm, yarn, npm",
            "default": null,
            "enum": [
                "npm",
                "pnpm",
                "yarn"
            ],
            "type": "string"
        },
        "install.clipboardDetection": {
            "description": "What to do on clipboard detection for copied command to install packages",
            "default": "ask",
            "enum": [
                "ask",
                "auto",
                "disabled"
            ],
            "type": "string"
        },
        "install.runOnOpen": {
            "description": "Whether to run package manager install command whenever new workspace is opened to\nensure that you have up-to-date deps",
            "default": "askIfNeeded",
            "enum": [
                "always",
                "askIfNeeded",
                "disable",
                "ifNeeded"
            ],
            "type": "string"
        },
        "install.watchDelay": {
            "description": "Delay, before package manager invoke. Uses debounce. Relies on #install.watchPackageJson#",
            "default": 500,
            "type": "number"
        },
        "install.watchPackageJson": {
            "description": "Invoke package maanger install whenever you change dependencies in package.json (within VSCode only)",
            "default": true,
            "type": "boolean"
        },
        "install.watchPackageLocks": {
            "description": "Invoke package manager install whenever lockfile is changed (usually after git operations)",
            "default": "prompt",
            "enum": [
                "disabled",
                "prompt",
                "withoutPrompt"
            ],
            "type": "string"
        },
        "useIntegratedTerminal": {
            "description": "Wether to use integrated terminal for package manager commands (e.g. adding packages or `pnpm install`)",
            "default": true,
            "type": "boolean"
        },
        "onPackageManagerCommandFail": {
            "description": "By default when command if failed, terminal is showed, however you can opt-in into showing notification instead (benefit: there is retry command button in this case)\n\nNote: You can always open terminal, in which package manager commands are executed by using `Show Package Manager Terminal` command",
            "default": "showTerminal",
            "enum": [
                "showNotification",
                "showTerminal"
            ],
            "type": "string"
        },
        "packageManagerAllowedEnv": {
            "description": "All package manager commands are executed from extension host process. Passing all environmental variables from ext host can cause problems that is hard to debug.\nNote, that this affects all package manager commands for all package managers.",
            "default": "include",
            "enum": [
                "disable",
                "exclude",
                "include"
            ],
            "type": "string"
        },
        "addPackages.installTypes": {
            "description": "Install missing @types/ packages, if package doesn't have bin",
            "default": true,
            "type": "boolean"
        },
        "scripts.mainScripts": {
            "description": "The first script will be run from this list on `start-npm-script` command.",
            "uniqueItems": true,
            "default": [
                "dev",
                "start",
                "watch"
            ],
            "type": "array",
            "items": {
                "type": "string"
            }
        },
        "scripts.matchContents": {
            "description": "Whether to enable searching by script contents in quickpick",
            "default": false,
            "type": "boolean"
        },
        "scripts.restartDelay": {
            "description": "Number of milliseconds to wait after killing the script and before starting the script again\nNote: it only affects restart command from quick pick of this extension",
            "default": {},
            "allOf": [
                {
                    "type": "object",
                    "properties": {
                        "*": {
                            "type": "number"
                        }
                    }
                },
                {
                    "type": "object",
                    "additionalProperties": {
                        "type": "number"
                    }
                }
            ]
        },
        "scripts.specialCommands": {
            "description": "Map of workspace glob path: array of script contents",
            "type": "object",
            "additionalProperties": {
                "type": "array",
                "items": {
                    "type": "object",
                    "properties": {
                        "label": {
                            "description": "Defaults to command contents",
                            "type": "string"
                        },
                        "command": {
                            "type": "string"
                        },
                        "presentationOptions": {}
                    },
                    "required": [
                        "command"
                    ]
                }
            }
        },
        "search.includeDeprecated": {
            "description": "Include deprecated packages into search results",
            "default": false,
            "type": "boolean"
        },
        "runBinCommand.searchLocation": {
            "default": "allUpToRoot",
            "enum": [
                "allUpToRoot",
                "nearest"
            ],
            "type": "string"
        },
        "search.provder": {
            "description": "Provider that will be used when adding new packages from NPM. Algolia provides more info\nand 2x faster",
            "default": "algolia",
            "enum": [
                "algolia",
                "npms"
            ],
            "type": "string"
        },
        "codeActions.enableLanguages": {
            "description": "Specify language IDs in which to enable code actions. You can set it to empty array to entirely disable the feature.",
            "default": [
                "typescript",
                "typescriptreact",
                "javascript",
                "javascriptreact",
                "vue"
            ],
            "type": "array",
            "items": {
                "type": "string"
            }
        },
        "statusbar.showMainScriptStatus": {
            "default": true,
            "type": "boolean"
        },
        "yarnBerry.workspaceAutoInstall": {
            "description": "Applies only if project uses yarn 2 or greater and #openWorkspaceAutoInstall# is withoutPrompt. In this case project script, instead of your system-wide package manager will be used",
            "default": false,
            "type": "boolean"
        },
        "codeAction.resolveBranchName": {
            "description": "Disable if action open repository takes a lot of time, in this case it would use `master` branch in url",
            "default": true,
            "type": "boolean"
        },
        "runOnSave": {
            "type": "array",
            "items": {
                "type": "object",
                "properties": {
                    "relativePathGlob": {
                        "type": "string"
                    },
                    "command": {
                        "type": "string"
                    },
                    "deps": {
                        "type": "array",
                        "items": {
                            "anyOf": [
                                {
                                    "type": "object",
                                    "properties": {
                                        "dep": {
                                            "type": "string"
                                        },
                                        "type": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "dep",
                                        "type"
                                    ]
                                },
                                {
                                    "type": "string"
                                }
                            ]
                        }
                    },
                    "cwd": {
                        "description": "Note for `packageJson`: it will fallback to file if closest package.json cannot be find",
                        "default": "file",
                        "enum": [
                            "file",
                            "packageJson",
                            "workspace"
                        ],
                        "type": "string"
                    },
                    "killPrev": {
                        "description": "Kill previous command execution @default true",
                        "type": "boolean"
                    }
                },
                "required": [
                    "command",
                    "killPrev",
                    "relativePathGlob"
                ]
            }
        },
        "runOnSave.runOnAutoSave": {
            "description": "It won't run on after delay auto save type anyway",
            "default": false,
            "type": "string",
            "enum": [
                ""
            ]
        },
        "packageJsonIntellisense": {
            "description": "Wether to enable completions in package.json files",
            "default": true,
            "type": "boolean"
        },
        "packageJsonLinks": {
            "description": "Wether to enable links in package.json files",
            "default": true,
            "type": "boolean"
        },
        "packageJsonScriptNameLink": {
            "description": "Wether to enable links script names to run script",
            "default": false,
            "type": "boolean"
        }
    },
    "required": [
        "addPackages.installTypes",
        "codeAction.resolveBranchName",
        "codeActions.enableLanguages",
        "install.clipboardDetection",
        "install.runOnOpen",
        "install.watchDelay",
        "install.watchPackageJson",
        "install.watchPackageLocks",
        "leadingPackageManager",
        "onPackageManagerCommandFail",
        "packageJsonIntellisense",
        "packageJsonLinks",
        "packageJsonScriptNameLink",
        "packageManagerAllowedEnv",
        "runBinCommand.searchLocation",
        "runOnSave",
        "runOnSave.runOnAutoSave",
        "scripts.mainScripts",
        "scripts.matchContents",
        "scripts.restartDelay",
        "scripts.specialCommands",
        "search.includeDeprecated",
        "search.provder",
        "statusbar.showMainScriptStatus",
        "useIntegratedTerminal",
        "yarnBerry.workspaceAutoInstall"
    ]
}