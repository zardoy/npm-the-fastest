// GENERATED. DON'T EDIT MANUALLY
// md5hash: 4a565685fba6c6f1922f0623441870fc
{
    "type": "object",
    "properties": {
        "leadingPackageManager": {
            "description": "Your main package manager that leads your projects\nUsed when no lockfile is detected\nBy default (when null) first installed is picked: pnpm, yarn, npm",
            "default": null,
            "enum": [
                "npm",
                "pnpm",
                "yarn"
            ],
            "type": "string"
        },
        "install.clipboardDetection": {
            "description": "What to do on clipboard detection for copied command to install packages",
            "default": "ask",
            "enum": [
                "ask",
                "auto",
                "disabled"
            ],
            "type": "string"
        },
        "install.runOnOpen": {
            "description": "Whether to run package manager install command whenever new workspace is opened to\nensure that you have up-to-date deps",
            "default": "askIfNeeded",
            "enum": [
                "always",
                "askIfNeeded",
                "disable",
                "ifNeeded"
            ],
            "type": "string"
        },
        "install.watchLockfiles": {
            "description": "What to do on package manager lockfile changes (usually after git operations)",
            "default": "promptToInstall",
            "enumDescriptions": [
                "Don't do anything",
                "Display confirmation prompt to perform packages install",
                "Perform packages install without any confirmation prompts"
            ],
            "enum": [
                "disabled",
                "installWithoutPrompt",
                "promptToInstall"
            ],
            "type": "string"
        },
        "install.watchLockfilesGitCheckouts": {
            "description": "Wether to propose (or perform) packages isntallation only after detected git checkouts\nWhen enabled, `watchLockfiles` feature won't be available in non-git workspaces",
            "default": true,
            "type": "boolean"
        },
        "useIntegratedTerminal": {
            "description": "Wether to use integrated terminal for package manager commands (e.g. adding packages or `pnpm install`)",
            "default": true,
            "type": "boolean"
        },
        "onPackageManagerCommandFail": {
            "description": "By default when command if failed, terminal is showed, however you can opt-in into showing notification instead (benefit: there is retry command button in this case)\n\nNote: You can always open terminal, in which package manager commands are executed by using `Show Package Manager Terminal` command",
            "default": "showTerminal",
            "enum": [
                "showNotification",
                "showTerminal"
            ],
            "type": "string"
        },
        "packageManagerAllowedEnv": {
            "description": "All package manager commands are executed from extension host process. Passing all environmental variables from ext host can cause problems that is hard to debug.\nNote, that this affects all package manager commands for all package managers.",
            "default": "include",
            "enum": [
                "disable",
                "exclude",
                "include"
            ],
            "type": "string"
        },
        "addPackages.installTypes": {
            "description": "Install missing @types/ packages, if package doesn't have bin",
            "default": true,
            "type": "boolean"
        },
        "scripts.mainScripts": {
            "description": "The first script will be run from this list on `start-npm-script` command.",
            "uniqueItems": true,
            "default": [
                "dev",
                "start",
                "watch"
            ],
            "type": "array",
            "items": {
                "type": "string"
            }
        },
        "scripts.matchContents": {
            "description": "Whether to enable searching by script contents (description) in quickpick",
            "default": false,
            "type": "boolean"
        },
        "runNpmScript.showRunningOnTop": {
            "description": "Wether to always show running scripts on top",
            "default": false,
            "type": "boolean"
        },
        "scripts.restartDelay": {
            "description": "Number of milliseconds to wait after killing the script and before starting the script again\nNote: it only affects restart command from quick pick of this extension",
            "default": {},
            "allOf": [
                {
                    "type": "object",
                    "properties": {
                        "*": {
                            "type": "number"
                        }
                    }
                },
                {
                    "type": "object",
                    "additionalProperties": {
                        "type": "number"
                    }
                }
            ]
        },
        "scripts.specialCommands": {
            "description": "Map of workspace glob path: array of script contents",
            "type": "object",
            "additionalProperties": {
                "type": "array",
                "items": {
                    "type": "object",
                    "properties": {
                        "label": {
                            "description": "Defaults to command contents",
                            "type": "string"
                        },
                        "command": {
                            "type": "string"
                        },
                        "presentationOptions": {}
                    },
                    "required": [
                        "command"
                    ]
                }
            }
        },
        "search.includeDeprecated": {
            "description": "Include deprecated packages into search results",
            "default": false,
            "type": "boolean"
        },
        "runBinCommand.searchLocation": {
            "default": "allUpToRoot",
            "enum": [
                "allUpToRoot",
                "nearest"
            ],
            "type": "string"
        },
        "search.provder": {
            "description": "Provider that will be used when adding new packages from NPM. Algolia provides more info\nand 2x faster",
            "default": "algolia",
            "enum": [
                "algolia",
                "npms"
            ],
            "type": "string"
        },
        "codeActions.enableLanguages": {
            "description": "Specify language IDs in which to enable code actions. You can set it to empty array to entirely disable the feature.",
            "default": [
                "typescript",
                "typescriptreact",
                "javascript",
                "javascriptreact",
                "vue"
            ],
            "type": "array",
            "items": {
                "type": "string"
            }
        },
        "statusbar.showMainScriptStatus": {
            "default": true,
            "type": "boolean"
        },
        "codeAction.resolveBranchName": {
            "description": "Disable if action open repository takes a lot of time, in this case it would use `master` branch in url",
            "default": false,
            "type": "boolean"
        },
        "runOnSave": {
            "type": "array",
            "items": {
                "type": "object",
                "properties": {
                    "relativePathGlob": {
                        "type": "string"
                    },
                    "command": {
                        "type": "string"
                    },
                    "deps": {
                        "type": "array",
                        "items": {
                            "anyOf": [
                                {
                                    "type": "object",
                                    "properties": {
                                        "dep": {
                                            "type": "string"
                                        },
                                        "type": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "dep",
                                        "type"
                                    ]
                                },
                                {
                                    "type": "string"
                                }
                            ]
                        }
                    },
                    "cwd": {
                        "description": "Note for `packageJson`: it will fallback to file if closest package.json cannot be find",
                        "default": "file",
                        "enum": [
                            "file",
                            "packageJson",
                            "workspace"
                        ],
                        "type": "string"
                    },
                    "killPrev": {
                        "description": "Kill previous command execution @default true",
                        "type": "boolean"
                    },
                    "silent": {
                        "default": false,
                        "type": "boolean"
                    }
                },
                "required": [
                    "command",
                    "relativePathGlob"
                ]
            }
        },
        "runOnSaveAfterFocusOut": {
            "description": "Wether to run `runOnSave` rules after save on focus out. I disabled after delay to not be annoying anyway",
            "default": false,
            "type": "boolean"
        },
        "packageJsonIntellisense": {
            "description": "Wether to enable completions in package.json files",
            "default": true,
            "type": "boolean"
        },
        "packageJsonLinks": {
            "description": "Wether to enable links in package.json files",
            "default": true,
            "type": "boolean"
        },
        "packageJsonScriptNameLink": {
            "description": "Wether to enable links script names to run script",
            "default": false,
            "type": "boolean"
        },
        "depsKeyLinkAction": {
            "description": "Assign the link's action in package.json dependencies objects at dependencies key (name)\nRecommended: `openPackageRepository`",
            "enumDescriptions": [
                "Do not display link with action",
                "Reveal package at npmjs.com",
                "Open package's README.MD at side",
                "Open package's content at jsdelivr.com",
                "Open package's repository (e.g. at GitHub)",
                "Reveal package's folder in explorer area",
                "Open package's package.json file",
                "Open Quick Pick to let decide the action"
            ],
            "default": "disable",
            "enum": [
                "chooseAction",
                "disable",
                "openAtJsdelivr",
                "openOnNpm",
                "openPackageJson",
                "openPackageReadmePreview",
                "openPackageRepository",
                "revealInExplorer"
            ],
            "type": "string"
        },
        "depsValueLinkAction": {
            "description": "Assign the link's action in package.json dependencies objects at dependencies value (version)\nRecommended: `openPackageJson`",
            "enumDescriptions": [
                "Do not display link with action",
                "Reveal package at npmjs.com",
                "Open package's README.MD at side",
                "Open package's content at jsdelivr.com",
                "Open package's repository (e.g. at GitHub)",
                "Reveal package's folder in explorer area",
                "Open package's package.json file",
                "Open Quick Pick to let decide the action"
            ],
            "default": "disable",
            "enum": [
                "chooseAction",
                "disable",
                "openAtJsdelivr",
                "openOnNpm",
                "openPackageJson",
                "openPackageReadmePreview",
                "openPackageRepository",
                "revealInExplorer"
            ],
            "type": "string"
        },
        "useNoJsonDiagnosticsWorkaround": {
            "default": true,
            "type": "boolean"
        }
    },
    "required": [
        "addPackages.installTypes",
        "codeAction.resolveBranchName",
        "codeActions.enableLanguages",
        "depsKeyLinkAction",
        "depsValueLinkAction",
        "install.clipboardDetection",
        "install.runOnOpen",
        "install.watchLockfiles",
        "install.watchLockfilesGitCheckouts",
        "leadingPackageManager",
        "onPackageManagerCommandFail",
        "packageJsonIntellisense",
        "packageJsonLinks",
        "packageJsonScriptNameLink",
        "packageManagerAllowedEnv",
        "runBinCommand.searchLocation",
        "runNpmScript.showRunningOnTop",
        "runOnSave",
        "runOnSaveAfterFocusOut",
        "scripts.mainScripts",
        "scripts.matchContents",
        "scripts.restartDelay",
        "scripts.specialCommands",
        "search.includeDeprecated",
        "search.provder",
        "statusbar.showMainScriptStatus",
        "useIntegratedTerminal",
        "useNoJsonDiagnosticsWorkaround"
    ]
}